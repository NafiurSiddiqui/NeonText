{"version":3,"sources":["src/js/globalVariables.js","src/js/globalFuntions.js","src/js/ui nav/ui-inputNav.js","src/js/textInput.js","src/js/font family/setFonts.js","src/js/ui color/uiColor.js","src/js/neonSwitch.js","src/js/index.js"],"names":["uiNav","document","querySelectorAll","uiInputText","querySelector","uiInputFont","uiInputColor","uiForm","display","displayWrapper","canva","getElementById","ctx","getContext","barWidthSize","heightContainer","height","barHeight","barHeightSize","fontBtn","fontBtnsBlack","fontBtnsWhite","neonSwitch","colorList","globalVar","globalFonts","priceSmall","priceSmallLength","priceSmallHeight","priceMedium","priceMediumLength","priceMediumHeight","priceLarge","priceLargeLength","priceLargeHeight","globarPrice","setDisplay","el","on","style","clearCanvas","clearRect","width","writeOnCanvas","userText","fillText","writeOnCanvasWithFont","font","fillStyle","measureBars","metrics","textLength","largeFont","heightSize","Math","floor","actualBoundingBoxAscent","actualBoundingBoxDescent","widthSize","textContent","showBars","widthPrice","parseInt","heightPrice","calculatePricing","calculateDimension","show","checkClass","single","child","className","classList","contains","setClass","add","removeClass","remove","navActive","uiActive","textState","fontState","colorState","setValue","e","targetText","target","innerText","forEach","list","addEventListener","navText","firstElementChild","textInputState","init","localStorage","length","getItem","measureText","clear","debounceMeasurement","timeout","clearTimeout","setTimeout","value","setItem","localUserText","trim","alert","bottom","left","data","inputType","newUserText","loadFont","targetFont","fontFamily","getScreenSize","window","innerWidth","btn","screenWidth","fontClicked","fontUserText","setFontSize","size","fontSize","setNewHeight","newHeight","heightValue","getComputedStyle","btns","targetCondition","largeFonts","fontId","console","log","id","top","right","targetBtn","closest","cls","btnActivate","bulbDom","colorPalette","code","listColor","setColor","color","neonState","textShadow","checkColor","response","filter","includes","map","setGlowingLight","bulb","targetColor","glowLight","dataset","active","listEl","checked","li","lastColorState","neonOn"],"mappings":"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","file":"js.686f1d26.js","sourceRoot":"..","sourcesContent":["const uiNav = document.querySelectorAll(\".ui-input-nav-list\");\r\nconst uiInputText = document.querySelector(\".ui-input-form.text\");\r\nconst uiInputFont = document.querySelector(\".ui-input-form.fontFamily\");\r\nconst uiInputColor = document.querySelector(\".ui-input-form.color\");\r\nconst uiForm = document.querySelectorAll(\".ui-input-form\");\r\nconst display = document.querySelector(\".ui-display-userText-text\");\r\nconst displayWrapper = document.querySelector(\".ui-display-userText-wrapper\");\r\nconst canva = document.getElementById(\"displayText\");\r\nconst ctx = canva.getContext(\"2d\");\r\n\r\n//-----------measurement bars\r\nlet barWidthSize = document.querySelector(\".measurementBar-width-length\");\r\nconst heightContainer = document.querySelector(\r\n\t\".measurementBar-height-wrapper\"\r\n);\r\n\r\nconst height = document.querySelector(\".measurementBar-height-length\");\r\n\r\nconst barHeight = document.querySelector(\".measurementBar-height\");\r\nconst barHeightSize = document.querySelector(\".measurementBar-height-length\");\r\n\r\n//font family\r\nlet fontBtn = document.querySelectorAll(\".ui-input-fontFamily-list\");\r\nlet fontBtnsBlack = document.querySelectorAll(\r\n\t\".ui-input-fontFamily-list__image\"\r\n);\r\nlet fontBtnsWhite = document.querySelectorAll(\r\n\t\".ui-input-fontFamily-list__imageWhite\"\r\n);\r\n//neonSwitch\r\nconst neonSwitch = document.getElementById(\"neonSwitch\");\r\n//colorList\r\nconst colorList = document.querySelectorAll(\".input-color-list\");\r\n//exporting these as globalVariable\r\nexport const globalVar = {\r\n\tuiNav,\r\n\tuiInputText,\r\n\tuiInputFont,\r\n\tuiInputColor,\r\n\tuiForm,\r\n\tdisplay,\r\n\tdisplayWrapper,\r\n\tcanva,\r\n\tctx,\r\n\tbarWidthSize,\r\n\theight,\r\n\theightContainer,\r\n\tbarHeight,\r\n\tbarHeightSize,\r\n\tneonSwitch,\r\n\tcolorList,\r\n};\r\n\r\nlet globalFonts = {\r\n\tfontBtn,\r\n\tfontBtnsWhite,\r\n\tfontBtnsBlack,\r\n};\r\n\r\nexport default globalFonts;\r\n\r\n//--------------Pricing cards\r\n\r\nlet priceSmall = document.querySelector(\".ui-price-card__small-price\");\r\nlet priceSmallLength = document.querySelector(\".ui-price-card__small-length\");\r\nlet priceSmallHeight = document.querySelector(\".ui-price-card__small-height\");\r\n\r\nlet priceMedium = document.querySelector(\".ui-price-card__medium-price\");\r\nlet priceMediumLength = document.querySelector(\".ui-price-card__medium-length\");\r\nlet priceMediumHeight = document.querySelector(\".ui-price-card__medium-height\");\r\n\r\nlet priceLarge = document.querySelector(\".ui-price-card__large-price\");\r\nlet priceLargeLength = document.querySelector(\".ui-price-card__large-length\");\r\nlet priceLargeHeight = document.querySelector(\".ui-price-card__large-height\");\r\n\r\nexport let globarPrice = {\r\n\tpriceSmall,\r\n\tpriceSmallLength,\r\n\tpriceSmallHeight,\r\n\tpriceMedium,\r\n\tpriceMediumLength,\r\n\tpriceMediumHeight,\r\n\tpriceLarge,\r\n\tpriceLargeHeight,\r\n\tpriceLargeLength,\r\n};\r\n","import { globalVar } from \"./globalVariables\";\r\nimport { globarPrice } from \"./globalVariables\";\r\n\r\nconst { heightContainer } = globalVar;\r\nlet {\r\n\tpriceSmall,\r\n\tpriceSmallLength,\r\n\tpriceSmallHeight,\r\n\tpriceMedium,\r\n\tpriceMediumLength,\r\n\tpriceMediumHeight,\r\n\tpriceLarge,\r\n\tpriceLargeHeight,\r\n\tpriceLargeLength,\r\n} = globarPrice;\r\n\r\nexport default function setDisplay(el, on = false) {\r\n\tif (on === true) {\r\n\t\tel.style.display = \"flex\";\r\n\t} else {\r\n\t\tel.style.display = \"none\";\r\n\t}\r\n}\r\n\r\nexport function clearCanvas(ctx, canva) {\r\n\tctx.clearRect(0, 0, canva.width, canva.height);\r\n}\r\n\r\nexport function writeOnCanvas(ctx, userText) {\r\n\tctx.fillText(userText, 0, 50);\r\n}\r\n\r\nexport function writeOnCanvasWithFont(ctx, userText, font) {\r\n\tctx.font = `4rem ${font}`;\r\n\tctx.fillStyle = \"White\";\r\n\tctx.fillText(userText, 0, 50);\r\n}\r\n\r\nexport function measureBars(\r\n\tmetrics,\r\n\ttextLength,\r\n\tbarWidthSize,\r\n\tbarHeight,\r\n\tbarHeightSize,\r\n\tlargeFont = false\r\n) {\r\n\t//height\r\n\tlet height =\r\n\t\tMath.floor(metrics.actualBoundingBoxAscent) +\r\n\t\tMath.floor(metrics.actualBoundingBoxDescent);\r\n\r\n\t//measurement bars\r\n\tlet widthSize = (barWidthSize.textContent = `${textLength * 2} CM`);\r\n\tbarHeight.style.height = `${height}px`;\r\n\r\n\t//font Amsterdam or RasterSlice?\r\n\tlet heightSize;\r\n\tif (largeFont === true) {\r\n\t\treturn (heightSize = barHeightSize.textContent =\r\n\t\t\t`${Math.floor(height / 2)}Cm`);\r\n\t} else {\r\n\t\theightSize = barHeightSize.textContent = `${Math.floor(height)}Cm`;\r\n\t}\r\n\tshowBars(true);\r\n\t//PRICING\r\n\tlet widthPrice = parseInt(widthSize);\r\n\tlet heightPrice = parseInt(heightSize);\r\n\tcalculatePricing(textLength);\r\n\tcalculateDimension(widthPrice, heightPrice);\r\n\treturn [widthSize, heightSize];\r\n}\r\n\r\nexport function showBars(show) {\r\n\tif (show === true) {\r\n\t\tsetDisplay(heightContainer, true);\r\n\t} else {\r\n\t\tsetDisplay(heightContainer, false);\r\n\t}\r\n}\r\n\r\nexport function calculatePricing(textLength) {\r\n\tpriceSmall.textContent = `$${textLength * 80}`;\r\n\tpriceMedium.textContent = `$${textLength * 95}`;\r\n\tpriceLarge.textContent = `$${textLength * 105}`;\r\n}\r\n\r\nexport function calculateDimension(width, height) {\r\n\tpriceSmallLength.textContent = `${width} Cm`;\r\n\tpriceSmallHeight.textContent = `${height} Cm`;\r\n\tpriceMediumLength.textContent = `${parseInt(width * 2)} Cm`;\r\n\tpriceMediumHeight.textContent = `${parseInt(height * 1.1)} Cm`;\r\n\tpriceLargeLength.textContent = `${width * 3} Cm`;\r\n\tpriceLargeHeight.textContent = `${parseInt(height * 1.3)} Cm`;\r\n}\r\n","// import \"./globalVariables\";\r\nimport { globalVar } from \"../globalVariables\";\r\n(\"./globalVariables\");\r\n\r\n//global Var destructured\r\nlet { uiNav, uiInputText, uiInputFont, uiInputColor, uiForm, display } =\r\n\tglobalVar;\r\n\r\nfunction checkClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\treturn el.classList.contains(className);\r\n\t} else {\r\n\t\treturn el[child].classList.contains(className);\r\n\t}\r\n}\r\n\r\nfunction setClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\t//returns element only\r\n\t\treturn el.classList.add(className);\r\n\t} else {\r\n\t\t//returns element from an array like globalVar.uiNav\r\n\t\treturn el[child].classList.add(className);\r\n\t}\r\n}\r\n\r\nfunction removeClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\tel.classList.remove(className);\r\n\t} else {\r\n\t\tel[child].classList.remove(className);\r\n\t}\r\n}\r\n\r\n//for quick referencing\r\n\r\nconst navActive = \"nav-active\";\r\nconst uiActive = \"ui-active\";\r\n//state checking\r\nlet textState = false;\r\nlet fontState = false;\r\nlet colorState = false;\r\n\r\ncheckClass(true, uiInputText, null, uiActive);\r\n\r\nfunction setValue(e) {\r\n\tlet targetText = e.target.innerText;\r\n\r\n\t//TEXT NAV\r\n\tif (targetText === \"Text\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\tcheckClass(false, uiNav, 1, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 2, navActive)\r\n\t\t) {\r\n\t\t\tremoveClass(false, uiNav, 1, navActive);\r\n\t\t\tremoveClass(false, uiNav, 2, navActive);\r\n\t\t\tfontState = false;\r\n\t\t\tcolorState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\tcheckClass(true, uiInputFont, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputColor, null, uiActive)\r\n\t\t) {\r\n\t\t\tremoveClass(true, uiInputFont, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputColor, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate text Nav\r\n\t\tsetClass(false, uiNav, 0, navActive);\r\n\t\t//activate text input area\r\n\t\tsetClass(true, uiInputText, null, uiActive);\r\n\t\t//set the state to true\r\n\t\treturn (textState = true);\r\n\t}\r\n\r\n\t//font famly\r\n\r\n\tif (targetText === \"Font Family\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\tcheckClass(false, uiNav, 0, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 2, navActive)\r\n\t\t) {\r\n\t\t\tremoveClass(false, uiNav, 0, navActive);\r\n\t\t\tremoveClass(false, uiNav, 2, navActive);\r\n\t\t\ttextState = false;\r\n\t\t\tcolorState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\tcheckClass(true, uiInputText, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputColor, null, uiActive)\r\n\t\t) {\r\n\t\t\tremoveClass(true, uiInputText, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputColor, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate font Nav\r\n\t\tsetClass(false, uiNav, 1, navActive);\r\n\r\n\t\t//activate font btn area\r\n\t\tsetClass(true, uiInputFont, null, uiActive);\r\n\t\t//set the state to true\r\n\t\tfontState = true;\r\n\t}\r\n\r\n\t//color\r\n\tif (targetText === \"Color\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\tcheckClass(false, uiNav, 0, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 1, navActive)\r\n\t\t) {\r\n\t\t\tremoveClass(false, uiNav, 0, navActive);\r\n\t\t\tremoveClass(false, uiNav, 1, navActive);\r\n\t\t\ttextState = false;\r\n\t\t\tfontState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\tcheckClass(true, uiInputText, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputFont, null, uiActive)\r\n\t\t) {\r\n\t\t\tremoveClass(true, uiInputText, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputFont, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate color Nav\r\n\t\tsetClass(false, uiNav, 2, navActive);\r\n\t\t//activate color bulb area\r\n\t\tsetClass(true, uiInputColor, null, uiActive);\r\n\t\t//set the state to true\r\n\t\treturn (colorState = true);\r\n\t}\r\n}\r\n\r\n// console.log(textState);\r\n\r\nglobalVar.uiNav.forEach((list) => {\r\n\tlist.addEventListener(\"click\", setValue);\r\n});\r\n\r\n/**\r\n * @ERRORs -\r\n * In case of any TypeError:el.classlist is undefined, try turning the booleans true or false. Understanding these helper function beforehand will save your time!\r\n */\r\n","import { globalVar } from \"./globalVariables\";\r\nimport setDisplay, {\r\n\twriteOnCanvas,\r\n\tclearCanvas,\r\n\tmeasureBars,\r\n\tshowBars,\r\n\twriteOnCanvasWithFont,\r\n} from \"./globalFuntions\";\r\n\r\nlet {\r\n\tbarWidthSize,\r\n\theightContainer,\r\n\tbarHeight,\r\n\tbarHeightSize,\r\n\tuiInputText,\r\n\tdisplay,\r\n\tcanva,\r\n\tctx,\r\n\theight,\r\n} = globalVar;\r\n\r\nlet navText = uiInputText.firstElementChild;\r\n//state variables\r\nlet textInputState = false;\r\n//set the default states\r\nexport let userText = \"\";\r\nexport let textLength = null;\r\nexport let metrics = null;\r\n\r\nfunction init() {\r\n\t//check for local storage value exist\r\n\tif (localStorage.length > 0) {\r\n\t\tuserText = localStorage.getItem(\"userText\");\r\n\t\tdisplay.textContent = userText;\r\n\t\tlet textLength = userText.length;\r\n\t\twriteOnCanvasWithFont(ctx, userText, \"Tangerine\");\r\n\t\tmetrics = ctx.measureText(userText);\r\n\t\tmeasureBars(metrics, textLength, barWidthSize, barHeight, barHeightSize);\r\n\t} else {\r\n\t\tlocalStorage.clear();\r\n\t\tuserText = \"Your Text\";\r\n\t\tdisplay.textContent = userText;\r\n\t\tsetDisplay(heightContainer, false);\r\n\t}\r\n\tctx.font = \"4rem Tangerine\";\r\n\tctx.fillStyle = \"White\";\r\n}\r\n\r\ninit();\r\n\r\n//ACTION\r\nnavText.addEventListener(\"input\", (e) => {\r\n\t//get the input value, store it, return it\r\n\tuserText = e.target.value;\r\n\r\n\t//persist data in local storage\r\n\tlocalStorage.setItem(\"userText\", userText);\r\n\r\n\t//get the item from storage\r\n\tlet localUserText = localStorage.getItem(\"userText\");\r\n\ttextLength = localUserText.length;\r\n\r\n\t//show each letter upon typing\r\n\tdisplay.textContent = localUserText.trim();\r\n\r\n\t//check if the state is true\r\n\ttextLength > 0 ? (textInputState = true) : false;\r\n\r\n\ttextLength >= 20\r\n\t\t? alert(\r\n\t\t\t\t`If you need more than 30 characters of text, Please contact us: 📞 +14-999-876-42`\r\n\t\t  )\r\n\t\t: \"\";\r\n\r\n\tif (textLength >= 11) {\r\n\t\theight.style.bottom = `-2.4em`;\r\n\t\theight.style.left = `-0.5em`;\r\n\t}\r\n\t//any space should be omitted from calculating\r\n\tif (e.data === \" \") {\r\n\t\treturn;\r\n\t}\r\n\tif (e.inputType === \"deleteContentBackward\") {\r\n\t\t//recapture the userText here\r\n\r\n\t\tlet newUserText = localUserText;\r\n\t\t//rerender the userText\r\n\t\tif (newUserText.length !== 0) {\r\n\t\t\tclearCanvas(ctx, canva);\r\n\t\t\twriteOnCanvas(ctx, newUserText);\r\n\t\t\tmetrics = ctx.measureText(userText);\r\n\t\t\tdebounceMeasurement();\r\n\t\t}\r\n\t} else {\r\n\t\twriteOnCanvas(ctx, userText);\r\n\t\tmetrics = ctx.measureText(userText);\r\n\t\tdebounceMeasurement();\r\n\t}\r\n\r\n\tif (textLength === 0) {\r\n\t\tclearCanvas(ctx, canva);\r\n\t\tshowBars(false);\r\n\t\treturn;\r\n\t}\r\n\r\n\treturn userText;\r\n});\r\n\r\nexport default function debounceMeasurement() {\r\n\tlet timeout;\r\n\tshowBars(false);\r\n\t//cleartimeout\r\n\tclearTimeout(timeout);\r\n\t//measure bar\r\n\ttimeout = setTimeout(() => {\r\n\t\tmeasureBars(metrics, textLength, barWidthSize, barHeight, barHeightSize);\r\n\t}, 3000);\r\n}\r\n","import globalFonts, { globalVar } from \"../globalVariables\";\r\nimport setDisplay, {\r\n\tshowBars,\r\n\tmeasureBars,\r\n\tclearCanvas,\r\n} from \"../globalFuntions\";\r\nimport { userText } from \"../textInput\";\r\n\r\n//destructured vars\r\nlet { fontBtn, fontBtnsWhite } = globalFonts;\r\n\r\nlet {\r\n\tbarWidthSize,\r\n\theightContainer,\r\n\tbarHeight,\r\n\tbarHeightSize,\r\n\tdisplay,\r\n\tcanva,\r\n\tctx,\r\n} = globalVar;\r\n\r\n//defaults\r\nfontBtnsWhite.forEach((btn) => {\r\n\tbtn.classList.add(\"hide\");\r\n});\r\n\r\nfunction loadFont(targetFont, userText) {\r\n\t//---one for the display\r\n\tdisplay.style.fontFamily = targetFont;\r\n\t//---one for the canvas\r\n\tctx.font = `4rem ${targetFont}`;\r\n\tctx.fillStyle = \"White\";\r\n\tctx.fillText(userText, 0, 50);\r\n}\r\n\r\nfunction getScreenSize() {\r\n\tlet width = window.innerWidth;\r\n\treturn width;\r\n}\r\n\r\ngetScreenSize();\r\n\r\nlet screenWidth = getScreenSize();\r\n\r\nexport let fontClicked = false;\r\nlet fontUserText = \"\";\r\n\r\n//font  action\r\nfontBtn.forEach((btns) => {\r\n\t//select font\r\n\tbtns.addEventListener(\"click\", (e) => {\r\n\t\tfontClicked = true;\r\n\t\tlet target = e.target;\r\n\t\tfontUserText = userText;\r\n\t\tfontUserText = \"\";\r\n\t\tlet textLength = userText.length;\r\n\t\tlet metrics;\r\n\t\tlet newHeight;\r\n\t\t//Clear displays\r\n\t\tsetDisplay(heightContainer, false);\r\n\t\tclearCanvas(ctx, canva);\r\n\r\n\t\tconst targetCondition = target.classList.length > 1;\r\n\t\t//big fonts\r\n\t\tlet largeFonts = \"\";\r\n\r\n\t\t//if it is is  the parent\r\n\t\tif (targetCondition) {\r\n\t\t\tlet fontId = target.classList[1];\r\n\t\t\tlargeFonts = fontId;\r\n\t\t\tconsole.log(`From Parent click`);\r\n\t\t\tclearCanvas(ctx, canva);\r\n\t\t\tloadFont(fontId, userText);\r\n\t\t\tmetrics = ctx.measureText(userText);\r\n\r\n\t\t\tif (largeFonts === \"Amsterdam\" || largeFonts === \"RasterSlice\") {\r\n\t\t\t\tconsole.log(\"LARGE CONDITION\");\r\n\t\t\t\tmeasureBars(\r\n\t\t\t\t\tmetrics,\r\n\t\t\t\t\ttextLength,\r\n\t\t\t\t\tbarWidthSize,\r\n\t\t\t\t\tbarHeight,\r\n\t\t\t\t\tbarHeightSize,\r\n\t\t\t\t\ttrue\r\n\t\t\t\t);\r\n\t\t\t\tif (screenWidth <= 800) {\r\n\t\t\t\t\t//calculate newHeight bassed on display Var\r\n\t\t\t\t\tsetNewHeight(newHeight, 1.5);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tmeasureBars(\r\n\t\t\t\t\tmetrics,\r\n\t\t\t\t\ttextLength,\r\n\t\t\t\t\tbarWidthSize,\r\n\t\t\t\t\tbarHeight,\r\n\t\t\t\t\tbarHeightSize,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//if it is the child\r\n\t\t\tlargeFonts = target.id;\r\n\t\t\tclearCanvas(ctx, canva);\r\n\t\t\tloadFont(target.id, userText);\r\n\t\t\tmetrics = ctx.measureText(userText);\r\n\r\n\t\t\tif (largeFonts === \"Amsterdam\" || largeFonts === \"RasterSlice\") {\r\n\t\t\t\tmeasureBars(\r\n\t\t\t\t\tmetrics,\r\n\t\t\t\t\ttextLength,\r\n\t\t\t\t\tbarWidthSize,\r\n\t\t\t\t\tbarHeight,\r\n\t\t\t\t\tbarHeightSize,\r\n\t\t\t\t\ttrue\r\n\t\t\t\t);\r\n\t\t\t\tif (screenWidth <= 800) {\r\n\t\t\t\t\tsetNewHeight(newHeight, 1.5);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tmeasureBars(\r\n\t\t\t\t\tmetrics,\r\n\t\t\t\t\ttextLength,\r\n\t\t\t\t\tbarWidthSize,\r\n\t\t\t\t\tbarHeight,\r\n\t\t\t\t\tbarHeightSize,\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//dynamic font sizing\r\n\t\tif (largeFonts === \"Amsterdam\" || largeFonts === \"RasterSlice\") {\r\n\t\t\tscreenWidth >= 800 ? setFontSize(50) : setFontSize(35);\r\n\t\t\tif (textLength >= 11) {\r\n\t\t\t\tbarHeightSize.style.bottom = `-6.4em`;\r\n\t\t\t\tbarHeightSize.style.left = `-1em`;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tscreenWidth >= 600 ? setFontSize(70) : setFontSize(60);\r\n\r\n\t\t\tif (\r\n\t\t\t\ttextLength >= 11 &&\r\n\t\t\t\t(largeFonts !== \"Amsterdam\" || largeFonts !== \"RasterSlice\")\r\n\t\t\t) {\r\n\t\t\t\tbarHeightSize.style.top = `-2.7em`;\r\n\t\t\t\tbarHeightSize.style.right = `1.3em`;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//navbtns activation\r\n\t\tlet targetBtn = e.target.closest(\".ui-input-fontFamily-list\");\r\n\t\t//loop throught all the lists\r\n\t\tfontBtn.forEach((cls) => {\r\n\t\t\t//if btnactive match found-remove it\r\n\t\t\tcls.classList.remove(\"btn-active\");\r\n\t\t});\r\n\r\n\t\t//add btn-active class to the existing target list\r\n\t\ttargetBtn.classList.add(\"btn-active\");\r\n\r\n\t\t//setthe display for bars\r\n\t\tshowBars(true);\r\n\r\n\t\treturn fontClicked;\r\n\t});\r\n});\r\n\r\nfunction setFontSize(size) {\r\n\treturn (display.style.fontSize = `${size}px`);\r\n}\r\n\r\nfunction setNewHeight(newHeight, heightValue) {\r\n\tnewHeight = parseInt(getComputedStyle(display).height);\r\n\treturn (barHeight.style.height = `${newHeight / heightValue}px`);\r\n}\r\n","import { globalVar } from \"../globalVariables\";\r\nimport { lastColorState, neonState } from \"../neonSwitch\";\r\nlet { display, colorList, neonSwitch } = globalVar;\r\nlet bulbDom = document.querySelectorAll(\".fa.fa-lightbulb-o\");\r\n\r\nconst colorPalette = [\r\n\t{ id: \"orange\", code: \"orange\" },\r\n\t{ id: \"lightRed\", code: \"rgb(255, 117, 117)\" },\r\n\t{ id: \"red\", code: \"red\" },\r\n\t{ id: \"deepBlue\", code: \"rgb(2, 116, 252)\" },\r\n\t{ id: \"electricBlue\", code: \"rgb(99, 170, 255)\" },\r\n\t{ id: \"tropicalBlue\", code: \"rgb(36, 183, 222)\" },\r\n\t{ id: \"iceBlue\", code: \"rgb(144, 220, 255)\" },\r\n\t{ id: \"green\", code: \"#20f020\" },\r\n\t{ id: \"mintGreen\", code: \"rgb(128, 255, 217)\" },\r\n\t{ id: \"deepGreen\", code: \"rgba(14, 185, 14, 0.884)\" },\r\n\t{ id: \"warmWhite\", code: \"rgb(240, 238, 199)\" },\r\n\t{ id: \"white\", code: \"rgb(225, 227, 230)\" },\r\n];\r\nexport let listColor = \"\";\r\n\r\nexport function setColor(color) {\r\n\tif (neonState !== false) {\r\n\t\tdisplay.style.textShadow = `rgb(255, 255, 255) 0px 0px 5px, rgb(255, 255, 255) 0px 0px 10px,\r\n\t\t${color} 0px 0px 20px, ${color} 0px 0px 30px,\r\n\t\t${color} 0px 0px 40px, ${color} 0px 0px 55px,\r\n\t\t${color} 0px 0px 75px`;\r\n\t} else {\r\n\t\tdisplay.style.textShadow = \"none\";\r\n\t}\r\n}\r\n\r\nexport function checkColor(listColor) {\r\n\tlet response = colorPalette.filter((color) => {\r\n\t\t//get the matched colorId\r\n\t\treturn listColor.includes(color.id);\r\n\t});\r\n\r\n\treturn response.map((code) => code.code);\r\n}\r\n\r\nfunction setGlowingLight(bulb, targetColor, glowLight = 0, listColor) {\r\n\tif (glowLight === 1) {\r\n\t\tbulb.style.textShadow = `0 0 4px white, 0 0 4px ${targetColor}, 0 0 8px ${targetColor},\r\n\t\t0 0 12px ${targetColor}, 0 0 16px ${targetColor}, 0 0 18px ${targetColor}`;\r\n\t\tbulb.style.color = \"rgb(248, 248, 248)\";\r\n\t} else {\r\n\t\tbulb.style.textShadow = \"none\";\r\n\t\tbulb.style.color = `${checkColor(listColor)}`;\r\n\t}\r\n}\r\n\r\nlet btnActivate;\r\n\r\ncolorList.forEach((list) => {\r\n\t//HOVER STATE\r\n\tlist.addEventListener(\"mouseenter\", (e) => {\r\n\t\tlet targetColor = e.target.classList[1];\r\n\t\tlet bulb = e.target.firstElementChild;\r\n\t\tsetGlowingLight(bulb, checkColor(targetColor), 1);\r\n\t});\r\n\tlist.addEventListener(\"mouseleave\", (e) => {\r\n\t\t// let targetColor = e.target.classList[1];\r\n\t\tlistColor = e.target.classList[1];\r\n\t\tlet bulb = e.target.firstElementChild;\r\n\r\n\t\tif (bulb.dataset.active === \"true\") {\r\n\t\t\tsetGlowingLight(bulb, checkColor(listColor), 1, listColor);\r\n\t\t} else {\r\n\t\t\tsetGlowingLight(bulb, checkColor(listColor), 0, listColor);\r\n\t\t}\r\n\t});\r\n\t// ACTIONS\r\n\tlist.addEventListener(\"click\", (e) => {\r\n\t\t//wherever color is clicked, alwyas make it happen on the parent -> <li>\r\n\t\tlet listEl = e.target.closest(\"li\");\r\n\t\tlet bulb = listEl.firstElementChild;\r\n\t\t//send the color to whoever needs it\r\n\t\tlistColor = listEl.classList[1];\r\n\t\t//if the neonSwitch is unchecked, alert to turn the switchOn\r\n\t\tif (neonSwitch.checked !== true) {\r\n\t\t\talert(\"Please turn the neon switch on.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//if the list color is equal to other custom color\r\n\r\n\t\tbulbDom.forEach((li) => {\r\n\t\t\tli.dataset.active = false;\r\n\t\t});\r\n\r\n\t\t//activate button\r\n\t\tbulb.dataset.active = true;\r\n\r\n\t\t//check if any other bulbData is true or empty\r\n\t\t//set btn glow\r\n\t\tif (bulb.dataset.active === \"true\") {\r\n\t\t\tbtnActivate = true;\r\n\t\t\tbulbDom.forEach((bulb) => {\r\n\t\t\t\t//get each bulbs color\r\n\t\t\t\tsetGlowingLight(\r\n\t\t\t\t\tbulb,\r\n\t\t\t\t\tcheckColor(bulb.dataset.color),\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tbulb.dataset.color\r\n\t\t\t\t);\r\n\t\t\t});\r\n\r\n\t\t\tsetGlowingLight(bulb, checkColor(listColor), 1, listColor);\r\n\t\t} else {\r\n\t\t\tbtnActivate = false;\r\n\t\t}\r\n\t\t//set color\r\n\t\tsetColor(checkColor(listColor));\r\n\t\tlastColorState.color = listColor;\r\n\t\treturn listColor;\r\n\t});\r\n});\r\n","import { globalVar } from \"./globalVariables\";\r\nimport { checkColor, listColor, setColor } from \"./ui color/uiColor\";\r\n\r\nlet { neonSwitch, display } = globalVar;\r\n\r\nneonSwitch.checked = true;\r\n\r\nexport let neonState;\r\nexport let lastColorState = { color: \"\" };\r\n\r\nexport function neonOn() {\r\n\tif (neonSwitch.checked === true) {\r\n\t\tdisplay.classList.add(\"neonOn\");\r\n\t\tneonState = true;\r\n\t\tif (lastColorState.color !== \"\") {\r\n\t\t\tsetColor(checkColor(lastColorState.color));\r\n\t\t} else {\r\n\t\t\tsetColor(\"rgb(255, 144, 255)\");\r\n\t\t}\r\n\t} else {\r\n\t\tdisplay.classList.remove(\"neonOn\");\r\n\t\tneonState = false;\r\n\t\tsetColor(checkColor(lastColorState.color));\r\n\t}\r\n}\r\n\r\nneonSwitch.addEventListener(\"click\", neonOn);\r\n\r\n/**\r\n * @lastColorState - to get the last navColor clicked, to update the color here as well\r\n * had to export it as object, otherwise this is only 'Read-only'\r\n */\r\n","import \"./globalVariables\";\r\nimport \"./globalFuntions\";\r\nimport \"./ui nav/ui-inputNav\";\r\nimport \"./textInput\";\r\nimport \"./font family/setFonts\";\r\nimport \"./neonSwitch\";\r\nimport \"./ui color/uiColor\";\r\nimport \"./misc\";\r\n"]}