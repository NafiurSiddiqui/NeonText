{"version":3,"sources":["src/js/globalVariables.js","src/js/globalFuntions.js","src/js/ui-inputNav_test.js","src/js/textInput.js","src/js/index.js"],"names":["uiNav","document","querySelectorAll","uiInputText","querySelector","uiInputFont","uiInputColor","uiForm","display","barLeft","barRight","barLength","bottomBarContainer","barStyleLeft","getComputedStyle","barLeftWidth","width","barStyleRight","barRightWidth","barSize","textContent","globalVar","toggleDisplay","el","on","style","checkClass","single","child","className","classList","contains","setClass","add","removeClass","remove","conditionalSet","targetText","val","navActive","uiActive","textState","fontState","colorState","setValue","e","target","innerText","forEach","list","addEventListener","navText","firstElementChild","textDisplay","textInputState","userText","init","value","length","console","log","setBarMeasurement","textLength","setTimeout","clearTimeout"],"mappings":";;AIAA,ADAA,ADCA;;AECA,ADDA,ADDA;AAEC,mBAAD;AFFA,AIGA,IJHMA,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,oBAA1B,CAAd;ACAe,ADCf,AEGA,IFHMC,KCDkBmB,ACIfI,MFHQ,GAAGzB,CEGpB,GDJe,ACI2C,CDJpBsB,EAAvB,CDCa,CCD0B,ADCzBnB,aAAT,CAAuB,qBAAvB,CAApB;ACDsD,ADEtD,AIEA,ADFA,ADE0D,IFFpDC,ECFoCmB,ACItBG,EDJkC,ICII,GFFzC,GAAG1B,QAAQ,CAACG,aAAT,CAAuB,2BAAvB,CAApB,UCF+C,ICIlB,CDJyB,ICII;AFD1D,AGCA,ADA0D,IFDpDE,AGCF6C,EDAgC5B,EAAsB,GCA/C,GAAGF,EHDI,GAAGpB,QAAQ,CAACG,aAAT,AGCGD,CHDoB,UGC9B,CAAsBiD,WHDf,CAArB,KGCA;AFHC,ADGD,AGCA,ADD0D,IFApD7C,AGCF8C,EFJC7B,ACGmCI,EDHjC,EDGK,CEA8C,EDH9C,ADGG3B,EGCA,EFJd,CEIiBoB,CFJA,EDGK,CAACnB,gBAAT,CAA0B,MGCbM,OAA5B,GHDe,CAAf;ACFEe,ADGF,AGCA,ADF0D,IDFxDA,ADGIf,AGCAI,EFJF,ACE2CiB,CDF1CJ,IDGQ,CCHX,CAASjB,CDGKP,CED0C,KDFxD,EDGsB,AGCxB,CFJqB,ADGIG,EGCgCiB,IFJvD,ODGc,CAAuB,cGCvC,CAAMT,YHDU,CAAhB,KGCA;AFHE,ADGF,AGAA,GFLC,CDKGH,AGAsBA,KFHlB,EDGG,AGAX,GHAcR,AGA2CoB,QHAnC,CAACjB,aAAT,CAAuB,GGArC,CAA0BK,OAA1B,WHAc,CAAd;ACFEc,ADGF,AGDA,ADDC,IDDCA,ADGEb,AGD+BA,EFF/B,ACCCiB,CDDAF,KAAH,ADGU,AGDZ,ADDW,CDDAjB,EDGIP,AGD0CoB,EDDzC,GDDd,CCCD,EDDoB,ADGE,AEFD,CFEEjB,KCHtB,QDGa,CAAuB,GGDtC,CAAmCM,QAAnC,WHCe,CAAf;ACFE,ADGF,AGFA,ADAE,IFEEC,AGFyCQ,OAA7C,ADASI,EFEI,AEFF,CCA8CF,ADA7CS,EFEI7B,OEFP,CFEe,AEFF8B,CFEG3B,OEFhB,CAAsByB,KFEf,CAAuB,CGFvC,CAA6CV,CDApC,CAAP,KCAF,eHEgB,CAAhB;ACFC,ADGD,AGDAV,ADDE,GAFD,CFIKG,GGDC,CAACa,CDDA,ICCR,CAAcT,KAAd,GHCwB,AGDF,GHCKf,EGD3B,EACA,IHAmC,CAACG,aAAT,CAC1B,kCAD0B,CAA3B,EAGA;AEJE,WAAOmB,EAAE,CAACK,KAAD,CAAF,CAAUE,SAAV,CAAoBC,QAApB,CAA6BF,SAA7B,CAAP;AFMF,AGJA,ADDE,IFKEhB,AGJAyC,YHIY,EGJE,CHICxC,EGJE,KAArB,EAEA,OHEmC,CAACL,OAAD,CAAnC;AACA,AELC,IFKGM,YAAY,GAAGF,YAAY,CAACG,KAAhC;AACA,AGFA,IHEIC,AGFAsC,QAAQ,GAAG,EHEE,GAAGzC,MGFpB,EACA,QHCoC,CAACJ,QAAD,CAApC;AACA,AGDA,ADJA,IFKIQ,KELKc,QFKQ,AELjB,GFKoBf,AELoC,aFKvB,CAACD,KAAlC;AACA,AENwD,IFMpDG,EENcQ,KFMP,CEN6C,EFM1ChB,SAAS,CAACS,WAAxB,EAEA,8CER2B,KAA6B;ACMxD,ADNwD,MAAtBG,EAAsB,CCM/CiC,IAAT,GAAgB;AHGT,AGFN,ADPuD,IFS3CnC,EETyBO,KAAkB,EFSlC,GAAG;AACxB5B,AGFAqD,ADRuD,EFUvDrD,AGFAqD,IDR4CxB,CFUvC,EAAL7B,IGFW,CHCa,AGDZoB,CDR2C,UCQvD,GAA0BmC,QAA1B;AHGApD,AGFA,EHEAA,WAAW,EAAXA,WAFwB,KGAbS,kBAAX,EAA+B,IAA/B;AHGAP,AGFA,ADTA,EFWAA,IEXIsB,MAAM,CFWC,EAAXtB,EEXe,IAAf,EAAqB,GFQG;AAIxBC,AEXC,EFWDA,YAAY,EAAZA,YAJwB;AAKxBC,AGFDiD,ADTE,EFWDjD,EGFG,IHEG,EAANA,CEXQgB,EAAE,CAACO,EFMa,OENhB,CAAaG,GAAb,CAAiBJ,SAAjB,CAAP;AFYDrB,AGDD2C,ADVE,EFWD3C,CEdA,ICaM,CAAC0C,CHCA,AEXA,EFWP1C,OANwB,MGKzB,CAAyB,OAAzB,EAAkC,UAACqC,CAAD,EAAO;AH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","file":"js.d818e0ef.js","sourceRoot":"..","sourcesContent":["const uiNav = document.querySelectorAll(\".ui-input-nav-list\");\r\nconst uiInputText = document.querySelector(\".ui-input-form.text\");\r\nconst uiInputFont = document.querySelector(\".ui-input-form.fontFamily\");\r\nconst uiInputColor = document.querySelector(\".ui-input-form.color\");\r\nconst uiForm = document.querySelectorAll(\".ui-input-form\");\r\nconst display = document.querySelector(\".ui-display-userText-text\");\r\nlet barLeft = document.querySelector(\".measurementBar-left\");\r\nlet barRight = document.querySelector(\".measurementBar-right\");\r\nlet barLength = document.querySelector(\".measurementBar-length\");\r\nconst bottomBarContainer = document.querySelector(\r\n\t\".measurementBar-container-bottom\"\r\n);\r\n//----------- Measurment Bar\r\n\r\nlet barStyleLeft = getComputedStyle(barLeft);\r\nlet barLeftWidth = barStyleLeft.width;\r\nlet barStyleRight = getComputedStyle(barRight);\r\nlet barRightWidth = barStyleRight.width;\r\nlet barSize = barLength.textContent;\r\n\r\n//exporting these as globalVariable\r\nexport const globalVar = {\r\n\tuiNav,\r\n\tuiInputText,\r\n\tuiInputFont,\r\n\tuiInputColor,\r\n\tuiForm,\r\n\tdisplay,\r\n\tbarLeft,\r\n\tbarRight,\r\n\tbarSize,\r\n\tbottomBarContainer,\r\n};\r\n","export default function toggleDisplay(el, on = false) {\r\n\tif (on === true) {\r\n\t\tel.style.display = \"flex\";\r\n\t} else {\r\n\t\tel.style.display = \"none\";\r\n\t}\r\n}\r\n","// import \"./globalVariables\";\r\nimport { globalVar } from \"./globalVariables\";\r\n(\"./globalVariables\");\r\n\r\nfunction checkClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\treturn el.classList.contains(className);\r\n\t} else {\r\n\t\treturn el[child].classList.contains(className);\r\n\t}\r\n}\r\n\r\nfunction setClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\t//returns element only\r\n\t\treturn el.classList.add(className);\r\n\t} else {\r\n\t\t//returns element from an array like globalVar.uiNav\r\n\t\treturn el[child].classList.add(className);\r\n\t}\r\n}\r\n\r\nfunction removeClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\tel.classList.remove(className);\r\n\t} else {\r\n\t\tel[child].classList.remove(className);\r\n\t}\r\n}\r\n\r\nfunction conditionalSet(targetText, val, ...args) {\r\n\t//refer to the individual function arguments in case of confusion\r\n\r\n\tif (targetText === val) {\r\n\t\tif (checkClass(args[0], args[1], args[2])) {\r\n\t\t\tremoveClass(args[0], args[1], args[2]);\r\n\t\t}\r\n\t\tif (checkClass(args[3], args[4], args[5])) {\r\n\t\t\tremoveClass(args[3], args[4], args[5]);\r\n\t\t}\r\n\t\ttoggleDisplay(args[6]);\r\n\t\ttoggleDisplay(args[7]);\r\n\t\tsetClass(args[8], args[9], args[10], args[11]);\r\n\t\tsetClass(args[12], args[13], args[14], args[15]);\r\n\t}\r\n}\r\n\r\n//for quick referencing\r\nconst navActive = \"nav-active\";\r\nconst uiActive = \"ui-active\";\r\n//state checking\r\nlet textState = false;\r\nlet fontState = false;\r\nlet colorState = false;\r\n\r\n//global Var destructured\r\nlet { uiNav, uiInputText, uiInputFont, uiInputColor, uiForm, display } =\r\n\tglobalVar;\r\n\r\n// console.log(uiNav[0]);\r\n\r\n// checkClass(false, uiNav, 0, navActive);\r\n\r\ncheckClass(true, uiInputText, null, uiActive);\r\n\r\nfunction setValue(e) {\r\n\t// console.log(e.target.innerText);\r\n\r\n\tlet targetText = e.target.innerText;\r\n\r\n\t//TEXT NAV\r\n\tif (targetText === \"Text\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\tcheckClass(false, uiNav, 1, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 2, navActive)\r\n\t\t) {\r\n\t\t\tremoveClass(false, uiNav, 1, navActive);\r\n\t\t\tremoveClass(false, uiNav, 2, navActive);\r\n\t\t\tfontState = false;\r\n\t\t\tcolorState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\tcheckClass(true, uiInputFont, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputColor, null, uiActive)\r\n\t\t) {\r\n\t\t\tremoveClass(true, uiInputFont, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputColor, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate text Nav\r\n\t\tsetClass(false, uiNav, 0, navActive);\r\n\t\t//activate text input area\r\n\t\tsetClass(true, uiInputText, null, uiActive);\r\n\t\t//set the state to true\r\n\t\treturn (textState = true);\r\n\t}\r\n\r\n\t//font famly\r\n\r\n\tif (targetText === \"Font Family\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\t// globalVar.uiNav[0].classList.contains(navActive) ||\r\n\t\t\t// globalVar.uiNav[2].classList.contains(navActive)\r\n\r\n\t\t\tcheckClass(false, uiNav, 0, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 2, navActive)\r\n\t\t) {\r\n\t\t\t// globalVar.uiNav[0].classList.remove(navActive);\r\n\t\t\t// globalVar.uiNav[2].classList.remove(navActive);\r\n\t\t\tremoveClass(false, uiNav, 0, navActive);\r\n\t\t\tremoveClass(false, uiNav, 2, navActive);\r\n\t\t\ttextState = false;\r\n\t\t\tcolorState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\t// globalVar.uiInputText.classList.contains(uiActive) ||\r\n\t\t\t// globalVar.uiInputColor.classList.contains(uiActive)\r\n\t\t\tcheckClass(true, uiInputText, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputColor, null, uiActive)\r\n\t\t) {\r\n\t\t\t// globalVar.uiInputText.classList.remove(uiActive);\r\n\t\t\t// globalVar.uiInputColor.classList.remove(uiActive);\r\n\t\t\tremoveClass(true, uiInputText, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputColor, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate font Nav\r\n\t\t// globalVar.uiNav[1].classList.add(navActive);\r\n\t\tsetClass(false, uiNav, 1, navActive);\r\n\r\n\t\t//activate font btn area\r\n\t\t// globalVar.uiInputFont.classList.add(uiActive);\r\n\t\tsetClass(true, uiInputFont, null, uiActive);\r\n\t\t//set the state to true\r\n\t\tfontState = true;\r\n\t}\r\n\r\n\t//color\r\n\tif (targetText === \"Color\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\tcheckClass(false, uiNav, 0, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 1, navActive)\r\n\t\t) {\r\n\t\t\tremoveClass(false, uiNav, 0, navActive);\r\n\t\t\tremoveClass(false, uiNav, 1, navActive);\r\n\t\t\ttextState = false;\r\n\t\t\tfontState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\t// globalVar.uiInputText.classList.contains(uiActive) ||\r\n\t\t\t// globalVar.uiInputFont.classList.contains(uiActive)\r\n\t\t\tcheckClass(true, uiInputText, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputFont, null, uiActive)\r\n\t\t) {\r\n\t\t\t// globalVar.uiInputText.classList.remove(uiActive);\r\n\t\t\t// globalVar.uiInputFont.classList.remove(uiActive);\r\n\t\t\tremoveClass(true, uiInputText, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputFont, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate color Nav\r\n\t\tsetClass(false, uiNav, 2, navActive);\r\n\t\t//activate color bulb area\r\n\t\tsetClass(true, uiInputColor, null, uiActive);\r\n\t\t//set the state to true\r\n\t\treturn (colorState = true);\r\n\t}\r\n}\r\n\r\n// console.log(textState);\r\n\r\nglobalVar.uiNav.forEach((list) => {\r\n\tlist.addEventListener(\"click\", setValue);\r\n});\r\n\r\n/**\r\n * @ERRORs -\r\n * In case of any TypeError:el.classlist is undefined, try turning the booleans true or false. Understanding these helper function beforehand will save your time!\r\n */\r\n","import { globalVar } from \"./globalVariables\";\r\nimport setDisplay from \"./globalFuntions\";\r\n//need NavText, UiText, display\r\n\r\nlet navText = globalVar.uiInputText.firstElementChild;\r\nlet textDisplay = globalVar.display;\r\nlet { bottomBarContainer, barLeft, barRight, barSize } = globalVar;\r\n\r\nbarLeft.style.width = \"9px\";\r\n//state variables\r\nlet textInputState = false;\r\n\r\n//set the default states\r\n\r\nlet userText = \"Your text\";\r\n//---fontFamily = selected from the list of fontFamily\r\n//---color = selected from the list of color\r\n\r\nfunction init() {\r\n\t//initial default state\r\n\ttextDisplay.textContent = userText;\r\n\tsetDisplay(bottomBarContainer, null);\r\n}\r\n\r\ninit();\r\n\r\nnavText.addEventListener(\"input\", (e) => {\r\n\t// console.log(e.target.value);\r\n\r\n\t//get the input value, store it, return it\r\n\tuserText = e.target.value;\r\n\r\n\t//persist data in local storage\r\n\r\n\t//show each letter upon typing\r\n\ttextDisplay.textContent = userText;\r\n\r\n\t//check if the state is true\r\n\tif (userText.length > 0) {\r\n\t\ttextInputState = true;\r\n\t}\r\n\r\n\t//calculate each length\r\n\t// console.log(userText.length * 9);\r\n\r\n\t//*if..input is true, clearTimeout and re-run the measurement() on 3seconds.\r\n\r\n\t//* or re-evaluate this function on every keystroke or input\r\n\r\n\t//setTimout for session storage and remove items from local storage, if there is data\r\n\t//set navTextState to true\r\n});\r\n\r\nconsole.log(barLeft.style.width);\r\n\r\nfunction setBarMeasurement() {\r\n\tconsole.log(\"💥 time 💥\");\r\n\r\n\t//calculate each length\r\n\tlet textLength = userText.length * 9;\r\n\tconsole.log(textLength);\r\n\t//add the caluculation to each side of the bar\r\n\r\n\t// barSize = textLength;\r\n\r\n\t//wait for 3 seconds and show the measurement bar\r\n\tsetDisplay(bottomBarContainer, true);\r\n}\r\n\r\nnavText.addEventListener(\"keyup\", () => {\r\n\t// console.log(\"measurment calculation ran!\");\r\n\r\n\t// console.log(`From the keyup: ${userText}`);\r\n\t// barLeft.style.width = `${20 + userText}px`;\r\n\t//wait for 3 seconds and show the measurement\r\n\tsetTimeout(setBarMeasurement, 3000);\r\n});\r\n\r\nnavText.addEventListener(\"keydown\", () => {\r\n\tconsole.log(\"KEY DOWN!\");\r\n\r\n\tclearTimeout(setBarMeasurement);\r\n\tconsole.log(\"CLEARED TIMEOUT\");\r\n});\r\n","import \"./globalVariables\";\r\n// import \"./ui-inputNav\";\r\nimport \"./globalFuntions\";\r\nimport \"./ui-inputNav_test\";\r\nimport \"./textInput\";\r\n\r\n// if (module.hot) {\r\n// \tmodule.hot.accept();\r\n// }\r\n"]}