{"version":3,"sources":["src/js/globalVariables.js","src/js/globalFuntions.js","src/js/ui-inputNav_test.js","src/js/textInput.js","src/js/index.js"],"names":["uiNav","document","querySelectorAll","uiInputText","querySelector","uiInputFont","uiInputColor","uiForm","display","barLeft","barRight","barSize","bottomBarContainer","globalVar","toggleDisplay","el","on","style","checkClass","single","child","className","classList","contains","setClass","add","removeClass","remove","conditionalSet","targetText","val","navActive","uiActive","textState","fontState","colorState","setValue","e","target","innerText","forEach","list","addEventListener","navText","firstElementChild","textDisplay","textInputState","console","log","userText","init","textContent","preventDefault","value","trim","length","data","textLength","width"],"mappings":";;AIAA,ADAA,ADCA;;AECA,ADDA,ADDA;AAEC,mBAAD;AFFA,AIGA,IJHMA,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,oBAA1B,CAAd;ACAe,ADCf,AEGA,IFHMC,KCDkBW,ACIfI,MFHQ,GAAGjB,CEGpB,GDJe,ACI2C,CDJpBc,EAAvB,CDCa,CCD0B,ADCzBX,aAAT,CAAuB,qBAAvB,CAApB;ACDsD,ADEtD,AIEA,ADFA,ADE0D,IFFpDC,ECFoCW,ACItBG,EDJkC,ICII,GFFzC,GAAGlB,QAAQ,CAACG,aAAT,CAAuB,2BAAvB,CAApB,UCF+C,ICIlB,CDJyB,ICII;AFD1D,AGCA,ADA0D,IFDpDE,AGCFqC,EDAgC5B,EAAsB,GCA/C,GAAGF,EHDI,GAAGZ,QAAQ,CAACG,aAAT,AGCGD,CHDoB,UGC9B,CAAsByC,WHDf,CAArB,KGCA;AFHC,ADGD,AGCA,ADD0D,IFApDrC,AGCFsC,EFJC7B,ACGmCI,EDHjC,EDGK,CEA8C,EDH9C,ADGGnB,EGCA,EFJd,CEIiBY,CFJA,EDGK,CAACX,gBAAT,CAA0B,MGCbM,OAA5B,GHDe,CAAf;ACFEO,ADGF,AGCA,ADF0D,IDFxDA,ADGIP,AGCAI,EFJF,ACE2CS,CDF1CJ,IDGQ,CCHX,CAAST,CDGKP,CED0C,KDFxD,EDGsB,AGCxB,CFJqB,ADGIG,EGCgCS,IFJvD,ODGc,CAAuB,cGCvC,CAAMD,YHDU,CAAhB,KGCA;AFHE,ADGF,AGAA,GFLC,CDKGH,AGAsBA,KFHlB,EDGG,AGAX,GHAcR,AGA2CY,QHAnC,CAACT,aAAT,CAAuB,GGArC,CAA0BK,OAA1B,WHAc,CAAd;ACFEM,ADGF,AGDA,ADDC,IDDCA,ADGEL,AGD+BA,EFF/B,ACCCS,CDDAF,KAAH,ADGU,AGDZ,ADDW,CDDAT,EDGIP,AGD0CY,EDDzC,GDDd,CCCD,EDDoB,ADGE,AEFD,CFEET,KCHtB,QDGa,CAAuB,GGDtC,CAAmCM,QAAnC,WHCe,CAAf;ACFE,ADGF,AGFA,ADAE,IFEEC,AGFyCA,OHElC,AGFX,ADASI,EAAE,CFEGd,AGF2CY,ADA7CS,QFEU,CAAClB,AEFd,CAAamB,QAAb,CAAsBF,GFEjB,CAAuB,GGFrC,CAA6CV,CDApC,CAAP,KCAF,EAEA,WHAc,CAAd;ACFC,ADGD,AGAA,ADFE,GAFD,CFIKC,KEFE,aFEgB,GAAGX,QAAQ,CAACG,aAAT,CAC1B,kCAD0B,CAA3B,EAGA;AAEA,AENE,WAAOW,EAAE,CAACK,KAAD,CAAF,CAAUE,SAAV,CAAoBC,QAApB,CAA6BF,SAA7B,CAAP;AFOF,AGLA,ADDE,ICCEyB,cAAc,GAAG,KAArB;AHMA,AGLAC,ADDC,OCCM,CAACC,GAAR,CAAYrC,OAAZ,GACA;AHKA;AAEA,AGLA,ADFA,ICEIsC,KDFKzB,GCEG,GAAG,EDFf,GAAwD,MCExD,EACA;AACA,ADJwD,MAAtCL,MAAsC,uEAA7B,KAA6B;AFQjD,AERiD,IFQ3CN,EERqBE,EAAsB,KFQlC,GAAG;AACxBf,AGHD,ADNwD,EFSvDA,IETqCoB,CFShC,EAALpB,AGHQkD,EDN+C,ECMxD,CHEyB,EGFT;AHIf/C,AGHA,ADPuD,EFUvDA,IEV4CkB,OFUjC,EAAXlB,AEVuD,WFQ/B;AAGxBE,AGHAwC,EHGAxC,AGHAwC,WHGW,AGHA,CAACM,CHGZ9C,UGHA,CHAwB,EGAE4C,QAA1B;AHIA3C,AGHA,ADRA,EFWAA,IEXIa,MAAM,EFWE,EAAZb,CEXe,IAAf,EAAqB,KFOG,GGCbM,kBAAX,EAA+B,IAA/B;AHIAL,AGHA,ADRC,EFWDA,MAAM,EAANA,MALwB;AAMxBC,AEXC,EFWDA,OAAO,EAAPA,AEXQO,EAAE,CAACO,IFKa,KELhB,CAAaG,GAAb,CAAiBJ,SAAjB,CAAP;AFYDZ,AGHDyC,ADRE,EFWDzC,CEdA,CCWG,KHGI,AEXA,EFWPA,OAPwB;AAQxBC,AGFDiC,ADTE,EFWDjC,KGFM,CAACgC,EHEC,EAARhC,QARwB,IGMzB,CAAyB,OAAzB,EAAkC,UAAC2B,CAAD,EAAO;AHGxC1B,AGFA0B,ADTC,EFWD1B,AGFA0B,CAAC,CAACe,KHEK,EAAPzC,AEXQI,EAAE,CAACK,IFEa,AGOxB,CDTU,CAAF,CCQgC,ADRtBE,CCWlB,QDXQ,CAAoBG,GAApB,CAAwBJ,SAAxB,CAAP;AFYDT,AGAA,A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","file":"js.d818e0ef.js","sourceRoot":"..","sourcesContent":["const uiNav = document.querySelectorAll(\".ui-input-nav-list\");\r\nconst uiInputText = document.querySelector(\".ui-input-form.text\");\r\nconst uiInputFont = document.querySelector(\".ui-input-form.fontFamily\");\r\nconst uiInputColor = document.querySelector(\".ui-input-form.color\");\r\nconst uiForm = document.querySelectorAll(\".ui-input-form\");\r\nconst display = document.querySelector(\".ui-display-userText-text\");\r\nlet barLeft = document.querySelector(\".measurementBar-left\");\r\nlet barRight = document.querySelector(\".measurementBar-right\");\r\nlet barSize = document.querySelector(\".measurementBar-length\");\r\nconst bottomBarContainer = document.querySelector(\r\n\t\".measurementBar-container-bottom\"\r\n);\r\n//----------- Measurment Bar\r\n\r\n// let barStyleLeft = getComputedStyle(barLeft);\r\n// let barLeftWidth = barStyleLeft.width;\r\n// let barStyleRight = getComputedStyle(barRight);\r\n// let barRightWidth = barStyleRight.width;\r\n\r\n//exporting these as globalVariable\r\nexport const globalVar = {\r\n\tuiNav,\r\n\tuiInputText,\r\n\tuiInputFont,\r\n\tuiInputColor,\r\n\tuiForm,\r\n\tdisplay,\r\n\tbarLeft,\r\n\tbarRight,\r\n\tbarSize,\r\n\tbottomBarContainer,\r\n};\r\n","export default function toggleDisplay(el, on = false) {\r\n\tif (on === true) {\r\n\t\tel.style.display = \"flex\";\r\n\t} else {\r\n\t\tel.style.display = \"none\";\r\n\t}\r\n}\r\n","// import \"./globalVariables\";\r\nimport { globalVar } from \"./globalVariables\";\r\n(\"./globalVariables\");\r\n\r\nfunction checkClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\treturn el.classList.contains(className);\r\n\t} else {\r\n\t\treturn el[child].classList.contains(className);\r\n\t}\r\n}\r\n\r\nfunction setClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\t//returns element only\r\n\t\treturn el.classList.add(className);\r\n\t} else {\r\n\t\t//returns element from an array like globalVar.uiNav\r\n\t\treturn el[child].classList.add(className);\r\n\t}\r\n}\r\n\r\nfunction removeClass(single = false, el, child, className) {\r\n\tif (single === true) {\r\n\t\tel.classList.remove(className);\r\n\t} else {\r\n\t\tel[child].classList.remove(className);\r\n\t}\r\n}\r\n\r\nfunction conditionalSet(targetText, val, ...args) {\r\n\t//refer to the individual function arguments in case of confusion\r\n\r\n\tif (targetText === val) {\r\n\t\tif (checkClass(args[0], args[1], args[2])) {\r\n\t\t\tremoveClass(args[0], args[1], args[2]);\r\n\t\t}\r\n\t\tif (checkClass(args[3], args[4], args[5])) {\r\n\t\t\tremoveClass(args[3], args[4], args[5]);\r\n\t\t}\r\n\t\ttoggleDisplay(args[6]);\r\n\t\ttoggleDisplay(args[7]);\r\n\t\tsetClass(args[8], args[9], args[10], args[11]);\r\n\t\tsetClass(args[12], args[13], args[14], args[15]);\r\n\t}\r\n}\r\n\r\n//for quick referencing\r\nconst navActive = \"nav-active\";\r\nconst uiActive = \"ui-active\";\r\n//state checking\r\nlet textState = false;\r\nlet fontState = false;\r\nlet colorState = false;\r\n\r\n//global Var destructured\r\nlet { uiNav, uiInputText, uiInputFont, uiInputColor, uiForm, display } =\r\n\tglobalVar;\r\n\r\n// console.log(uiNav[0]);\r\n\r\n// checkClass(false, uiNav, 0, navActive);\r\n\r\ncheckClass(true, uiInputText, null, uiActive);\r\n\r\nfunction setValue(e) {\r\n\t// console.log(e.target.innerText);\r\n\r\n\tlet targetText = e.target.innerText;\r\n\r\n\t//TEXT NAV\r\n\tif (targetText === \"Text\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\tcheckClass(false, uiNav, 1, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 2, navActive)\r\n\t\t) {\r\n\t\t\tremoveClass(false, uiNav, 1, navActive);\r\n\t\t\tremoveClass(false, uiNav, 2, navActive);\r\n\t\t\tfontState = false;\r\n\t\t\tcolorState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\tcheckClass(true, uiInputFont, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputColor, null, uiActive)\r\n\t\t) {\r\n\t\t\tremoveClass(true, uiInputFont, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputColor, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate text Nav\r\n\t\tsetClass(false, uiNav, 0, navActive);\r\n\t\t//activate text input area\r\n\t\tsetClass(true, uiInputText, null, uiActive);\r\n\t\t//set the state to true\r\n\t\treturn (textState = true);\r\n\t}\r\n\r\n\t//font famly\r\n\r\n\tif (targetText === \"Font Family\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\t// globalVar.uiNav[0].classList.contains(navActive) ||\r\n\t\t\t// globalVar.uiNav[2].classList.contains(navActive)\r\n\r\n\t\t\tcheckClass(false, uiNav, 0, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 2, navActive)\r\n\t\t) {\r\n\t\t\t// globalVar.uiNav[0].classList.remove(navActive);\r\n\t\t\t// globalVar.uiNav[2].classList.remove(navActive);\r\n\t\t\tremoveClass(false, uiNav, 0, navActive);\r\n\t\t\tremoveClass(false, uiNav, 2, navActive);\r\n\t\t\ttextState = false;\r\n\t\t\tcolorState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\t// globalVar.uiInputText.classList.contains(uiActive) ||\r\n\t\t\t// globalVar.uiInputColor.classList.contains(uiActive)\r\n\t\t\tcheckClass(true, uiInputText, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputColor, null, uiActive)\r\n\t\t) {\r\n\t\t\t// globalVar.uiInputText.classList.remove(uiActive);\r\n\t\t\t// globalVar.uiInputColor.classList.remove(uiActive);\r\n\t\t\tremoveClass(true, uiInputText, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputColor, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate font Nav\r\n\t\t// globalVar.uiNav[1].classList.add(navActive);\r\n\t\tsetClass(false, uiNav, 1, navActive);\r\n\r\n\t\t//activate font btn area\r\n\t\t// globalVar.uiInputFont.classList.add(uiActive);\r\n\t\tsetClass(true, uiInputFont, null, uiActive);\r\n\t\t//set the state to true\r\n\t\tfontState = true;\r\n\t}\r\n\r\n\t//color\r\n\tif (targetText === \"Color\") {\r\n\t\t//check and remove any nav Activation\r\n\t\tif (\r\n\t\t\tcheckClass(false, uiNav, 0, navActive) ||\r\n\t\t\tcheckClass(false, uiNav, 1, navActive)\r\n\t\t) {\r\n\t\t\tremoveClass(false, uiNav, 0, navActive);\r\n\t\t\tremoveClass(false, uiNav, 1, navActive);\r\n\t\t\ttextState = false;\r\n\t\t\tfontState = false;\r\n\t\t}\r\n\t\t//check and remove any uiActivation\r\n\t\tif (\r\n\t\t\t// globalVar.uiInputText.classList.contains(uiActive) ||\r\n\t\t\t// globalVar.uiInputFont.classList.contains(uiActive)\r\n\t\t\tcheckClass(true, uiInputText, null, uiActive) ||\r\n\t\t\tcheckClass(true, uiInputFont, null, uiActive)\r\n\t\t) {\r\n\t\t\t// globalVar.uiInputText.classList.remove(uiActive);\r\n\t\t\t// globalVar.uiInputFont.classList.remove(uiActive);\r\n\t\t\tremoveClass(true, uiInputText, null, uiActive);\r\n\t\t\tremoveClass(true, uiInputFont, null, uiActive);\r\n\t\t}\r\n\r\n\t\t//activate color Nav\r\n\t\tsetClass(false, uiNav, 2, navActive);\r\n\t\t//activate color bulb area\r\n\t\tsetClass(true, uiInputColor, null, uiActive);\r\n\t\t//set the state to true\r\n\t\treturn (colorState = true);\r\n\t}\r\n}\r\n\r\n// console.log(textState);\r\n\r\nglobalVar.uiNav.forEach((list) => {\r\n\tlist.addEventListener(\"click\", setValue);\r\n});\r\n\r\n/**\r\n * @ERRORs -\r\n * In case of any TypeError:el.classlist is undefined, try turning the booleans true or false. Understanding these helper function beforehand will save your time!\r\n */\r\n","import { globalVar } from \"./globalVariables\";\r\nimport setDisplay from \"./globalFuntions\";\r\n//need NavText, UiText, display\r\n\r\nlet navText = globalVar.uiInputText.firstElementChild;\r\nlet textDisplay = globalVar.display;\r\nlet { bottomBarContainer, barLeft, barRight, barSize } = globalVar;\r\n\r\n// barLeft.style.width = \"9px\";\r\n//state variables\r\nlet textInputState = false;\r\nconsole.log(barSize);\r\n//set the default states\r\n\r\nlet userText = \"Your text\";\r\n//---fontFamily = selected from the list of fontFamily\r\n//---color = selected from the list of color\r\n\r\nfunction init() {\r\n\t//initial default state\r\n\ttextDisplay.textContent = userText;\r\n\tsetDisplay(bottomBarContainer, null);\r\n}\r\n\r\ninit();\r\n\r\nnavText.addEventListener(\"input\", (e) => {\r\n\te.preventDefault();\r\n\r\n\t// console.log();\r\n\t//get the input value, store it, return it\r\n\tuserText = e.target.value;\r\n\r\n\t//persist data in local storage\r\n\r\n\t//show each letter upon typing\r\n\ttextDisplay.textContent = userText.trim();\r\n\r\n\t//check if the state is true\r\n\tif (userText.length > 0) {\r\n\t\ttextInputState = true;\r\n\t}\r\n\r\n\t//any space should be omitted from calculating\r\n\tif (e.data === \" \") {\r\n\t\treturn;\r\n\t}\r\n\tlet textLength = userText.length * 9 + 2;\r\n\t// let textLength = userText.length * 10;\r\n\r\n\t// ? HOW about you calculate the size of the textBox and grow shrink the bar accordingly?\r\n\t//calculate each length\r\n\t// console.log(userText.length * 9);\r\n\tbarLeft.style.width = textLength + \"px\";\r\n\tbarRight.style.width = `${textLength}px`;\r\n\tbarSize.textContent = `${textLength} CM`;\r\n\tif (userText.length > 0) {\r\n\t\tsetDisplay(bottomBarContainer, true);\r\n\t} else {\r\n\t\tsetDisplay(bottomBarContainer, null);\r\n\t}\r\n\r\n\t//*if..input is true, clearTimeout and re-run the measurement() on 3seconds.\r\n\r\n\t//* or re-evaluate this function on every keystroke or input\r\n\r\n\t//setTimout for session storage and remove items from local storage, if there is data\r\n});\r\n\r\n// console.log(barLeft.style.width);\r\n\r\n// function setBarMeasurement() {\r\n// \tconsole.log(\"💥 time 💥\");\r\n\r\n// \t// barSize = textLength;\r\n\r\n// \t//wait for 3 seconds and show the measurement bar\r\n// \tsetDisplay(bottomBarContainer, true);\r\n// }\r\n\r\n// navText.addEventListener(\"keyup\", () => {\r\n// \t// console.log(\"measurment calculation ran!\");\r\n\r\n// \t// console.log(`From the keyup: ${userText}`);\r\n// \tbarLeft.style.width = `${userText}px`;\r\n// \tconsole.log(userText);\r\n// \t//wait for 3 seconds and show the measurement\r\n// \tclearTimeout(setBarMeasurement);\r\n// \tsetDisplay(bottomBarContainer, null);\r\n// \tconsole.log(\"CLEARED TIMEOUT\");\r\n// });\r\n\r\n// navText.addEventListener(\"keydown\", () => {\r\n// \t// console.log(\"KEY DOWN!\");\r\n// \t//calculate each length\r\n// \tlet textLength = userText.length * 9;\r\n// \tconsole.log(textLength);\r\n// \t//add the caluculation to each side of the bar\r\n\r\n// \tsetTimeout(setBarMeasurement, 3000);\r\n// });\r\n","import \"./globalVariables\";\r\n// import \"./ui-inputNav\";\r\nimport \"./globalFuntions\";\r\nimport \"./ui-inputNav_test\";\r\nimport \"./textInput\";\r\n\r\n// if (module.hot) {\r\n// \tmodule.hot.accept();\r\n// }\r\n"]}